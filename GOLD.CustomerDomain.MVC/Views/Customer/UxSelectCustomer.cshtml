@model IEnumerable<GOLD.CustomerDomain.ApiModels.Customer>

@{
    var txid = ViewBag.txid + "/";
    bool showBackButton = ViewBag.ShowBackButton;
    bool backButtonAsLink = ViewBag.BackButtonAsLink;
    string backButtonText = ViewBag.BackButtonText;
    string selectButtonText = ViewBag.SelectButtonText;
    bool showPreviewLink = ViewBag.ShowPreviewLink;
}

@if (showBackButton && !backButtonAsLink)
{
    {
        @Html.ActionLink(backButtonText, "Back", "Customer", new { txid = txid }, new { @class = "btn btn-danger" })
        @:&nbsp; &nbsp;
    }
}
@Html.ActionLink("Refresh", "UxSelectCustomer", "Customer", new { txid = txid }, new { @class = "btn btn-warning" })
@if (showBackButton && backButtonAsLink)
{
    @:&nbsp; &nbsp;
    @Html.ActionLink(backButtonText, "Back", "Customer", new { txid = txid }, null)
    @:&nbsp; &nbsp;

}

<br />
<br />


<table class="table table-striped table-hover">
    <tr>
        @*<th>
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DOB)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NINO)
        </th>
        <th></th>
    </tr>

    @{

        foreach (var item in Model)
        {
            var trClass=  ""; // = (item.Id == ViewBag.Id) ? "success" : "";
            <tr class="@trClass">
                @*<td>
                    @Html.DisplayFor(modelItem => item.Cargo)
                </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DOB)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NINO)
                </td>
                <td>
                    @Html.ActionLink(selectButtonText, "UxSelectCustomer_CustomerSelected", "Customer", new { txid = txid, customerId = item.ID, fullName = item.LastName }, new { @class = "btn btn-success" })
                    @*@Html.ActionLink(selectButtonText, "UxSelectCustomer_CustomerSelected", "Customer", new { txid = txid, customerId = item.ID, fullName = item.FullName }, new { @class = "btn btn-success" })*@
                    @if (showPreviewLink)
                    {
                        <span>&nbsp;&nbsp;</span>
                        @Html.ActionLink("Preview", "UxSelectCustomer_PreviewCustomer", "Customer", new { txid = txid, customerId = item.ID }, new { @class = "btn btn-warning" })
                    }

                </td>
            </tr>
        }
    }

</table>
